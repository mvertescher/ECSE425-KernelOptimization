#!/bin/bash


#--------------------------------------------------------------------------------------------------
#	D1 BLOCK SIZE 
#--------------------------------------------------------------------------------------------------
datfile="D1_ASSOCIATIVITY.dat"

# Clear the data file
rm $datfile

# Largest associativity,
largest=128

echo "associativity Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw d1readMR d1writeMR" >> $datfile

# For each cache simulation 
for (( bytes = 1; bytes<=$largest; bytes+=1 )) do
	cgoutfile="./cgout/d1-a-$bytes"
	valgrind --tool=cachegrind --I1=32768,8,64 --D1=32768,$bytes,64  --LL=6291456,24,64 --cachegrind-out-file=$cgoutfile ./ecse425proj -N 200 -operation 1 

	echo "D1 Cache Size = $bytes, outfile = $cgoutfile"
	# Get the start and end lines to sum
	# These are the miss/hit results for each line, generated by cachegrind
	startline=$(sed -n /^fn=matVecMult$/= $cgoutfile)
	startline=$(($startline+1))
	endline=$(sed -n /^fn=randInitialize$/= $cgoutfile)
	endline=$(($endline-1))

	# Init the sums array
	sums=[10]
	for (( i = 0; i<=10; i++ )) do
		sums[$i]=0
	done

	echo "Adding lines $startline to $endline"
	for (( line = startline; line<=endline; line++ )) do
		#echo "Line: $line"
		#sed -n  $line,8p $cgoutfile
		string=$(sed -n  $line,8p $cgoutfile)
		IFS=' ' read -a array <<< "$string"

		for (( i = 0; i<=10; i++ )) do
			sums[$i]=`expr ${sums[$i]} + ${array[$i]}`
			#echo "${array[$i]}"
		done
	done 

	d1readMR=$(bc <<< "scale = 10; 100*${sums[5]}/${sums[4]} ")
	d1writeMR=$(bc <<< "scale = 10; 100*${sums[8]}/${sums[7]} ")

	echo "Printing to file: "
	echo "$bytes ${sums[1]} ${sums[2]} ${sums[3]} ${sums[4]} ${sums[5]} ${sums[6]} ${sums[7]} ${sums[8]} ${sums[9]} $d1readMR $d1writeMR"
	echo "$bytes ${sums[1]} ${sums[2]} ${sums[3]} ${sums[4]} ${sums[5]} ${sums[6]} ${sums[7]} ${sums[8]} ${sums[9]} $d1readMR $d1writeMR" >> $datfile
done
#--------------------------------------------------------------------------------------------------


#--------------------------------------------------------------------------------------------------
#	LL BLOCK SIZE 
#--------------------------------------------------------------------------------------------------
datfile="LL_ASSOCIATIVITY.dat"

# Clear the data file
rm $datfile

# Largest blocksize
largest=128

echo "associativity Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw llreadMR llwriteMR" >> $datfile

# For each cache simulation 
for (( bytes = 1; bytes<=$largest; bytes+=1 )) do
	cgoutfile="./cgout/dl-a-$bytes"
	valgrind --tool=cachegrind --I1=32768,8,64 --D1=32768,8,64 --LL=6291456,$bytes,64  --cachegrind-out-file=$cgoutfile ./ecse425proj -N 200 -operation 1 

	echo "LL Cache Size = $bytes, outfile = $cgoutfile"
	# Get the start and end lines to sum
	# These are the miss/hit results for each line, generated by cachegrind
	startline=$(sed -n /^fn=matVecMult$/= $cgoutfile)
	startline=$(($startline+1))
	endline=$(sed -n /^fn=randInitialize$/= $cgoutfile)
	endline=$(($endline-1))

	# Init the sums array
	sums=[10]
	for (( i = 0; i<=10; i++ )) do
		sums[$i]=0
	done

	echo "Adding lines $startline to $endline"
	for (( line = startline; line<=endline; line++ )) do
		#echo "Line: $line"
		#sed -n  $line,8p $cgoutfile
		string=$(sed -n  $line,8p $cgoutfile)
		IFS=' ' read -a array <<< "$string"

		for (( i = 0; i<=10; i++ )) do
			sums[$i]=`expr ${sums[$i]} + ${array[$i]}`
			#echo "${array[$i]}"
		done
	done 

	llreadMR=$(bc <<< "scale = 10; 100*${sums[6]}/${sums[4]} ")
	llwriteMR=$(bc <<< "scale = 10; 100*${sums[9]}/${sums[7]} ")

	echo "Printing to file: "
	echo "$bytes ${sums[1]} ${sums[2]} ${sums[3]} ${sums[4]} ${sums[5]} ${sums[6]} ${sums[7]} ${sums[8]} ${sums[9]} $llreadMR $llwriteMR"
	echo "$bytes ${sums[1]} ${sums[2]} ${sums[3]} ${sums[4]} ${sums[5]} ${sums[6]} ${sums[7]} ${sums[8]} ${sums[9]} $llreadMR $llwriteMR" >> $datfile
done
#--------------------------------------------------------------------------------------------------

#--------------------------------------------------------------------------------------------------
#	I1 CACHE SIZE 
#--------------------------------------------------------------------------------------------------
datfile="I1_ASSOCIATIVITY.dat"

# Clear the data file
rm $datfile

# Largest blocksize
largest=128

echo "associativity Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw i1readMR" >> $datfile

# For each cache simulation 
for (( bytes = 1; bytes<=$largest; bytes+=1 )) do
	cgoutfile="./cgout/i1-a-$bytes"
	valgrind --tool=cachegrind --I1=32768,$bytes,64  --D1=32768,8,64 --LL=6291456,24,64 --cachegrind-out-file=$cgoutfile ./ecse425proj -N 200 -operation 1 

	echo "I1 Cache Size = $bytes, outfile = $cgoutfile"
	# Get the start and end lines to sum
	# These are the miss/hit results for each line, generated by cachegrind
	startline=$(sed -n /^fn=matVecMult$/= $cgoutfile)
	startline=$(($startline+1))
	endline=$(sed -n /^fn=randInitialize$/= $cgoutfile)
	endline=$(($endline-1))

	# Init the sums array
	sums=[10]
	for (( i = 0; i<=10; i++ )) do
		sums[$i]=0
	done

	echo "Adding lines $startline to $endline"
	for (( line = startline; line<=endline; line++ )) do
		#echo "Line: $line"
		#sed -n  $line,8p $cgoutfile
		string=$(sed -n  $line,8p $cgoutfile)
		IFS=' ' read -a array <<< "$string"

		for (( i = 0; i<=10; i++ )) do
			sums[$i]=`expr ${sums[$i]} + ${array[$i]}`
			#echo "${array[$i]}"
		done
	done 

	i1readMR=$(bc <<< "scale = 10; 100*${sums[2]}/${sums[1]} ")

	echo "Printing to file: "
	echo "$bytes ${sums[1]} ${sums[2]} ${sums[3]} ${sums[4]} ${sums[5]} ${sums[6]} ${sums[7]} ${sums[8]} ${sums[9]} $i1readMR"
	echo "$bytes ${sums[1]} ${sums[2]} ${sums[3]} ${sums[4]} ${sums[5]} ${sums[6]} ${sums[7]} ${sums[8]} ${sums[9]} $i1readMR" >> $datfile
done
#--------------------------------------------------------------------------------------------------
