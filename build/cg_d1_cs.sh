#!/bin/bash

# Run 1 
#valgrind --tool=cachegrind --I1=32768,8,64 --D1=32768,8,64 --LL=6291456,24,64 --cachegrind-out-file=cg-test1 ./ecse425proj -N 200 -operation 1 

# Run 2
#valgrind --tool=cachegrind --I1=32768,8,64 --D1=512,8,64 --LL=6291456,24,64 --cachegrind-out-file=cg-test2 ./ecse425proj -N 200 -operation 1

# Run 3 
#valgrind --tool=cachegrind --I1=32768,8,64 --D1=1024,8,64 --LL=6291456,24,64 --cachegrind-out-file=cg-test3 ./ecse425proj -N 200 -operation 1

# Merge outputs 
#cg_merge -o d1_cachesize cg-test1 cg-test2 cg-test3

# Clean test files 
# rm -R cg-test*


# cat d1-512 | grep fn=matVecMult

# fn=matVecMult  ===  sed -n 7,16p d1-512
# sed -n -e 7,17p -e 23,33p d1-512

# print lines 
# sed -n '/^fn=matVecMult$/,/^fn=randInitialize$/'p d1-512
# print line numbers
# sed -n '/^fn=matVecMult$/,/^fn=randInitialize$/=' d1-512

datfile="D1_CACHESIZE.dat"

# Clear the data file
rm $datfile

# Largest cachesize, must be a multiple of 512 and power of 2 
largestcache=1048576

echo "cachesize Ir I1mr ILmr Dr D1mr DLmr Dw D1mw DLmw d1readMR d1writeMR" >> $datfile

# For each cache simulation 
for (( bytes = 512; bytes<=$largestcache; bytes*=2 )) do
	cgoutfile="./cgout/d1-$bytes"
	valgrind --tool=cachegrind --I1=32768,8,64 --D1=$bytes,8,64 --LL=6291456,24,64 --cachegrind-out-file=$cgoutfile ./ecse425proj -N 200 -operation 1 

	echo "D1 Cache Size = $bytes, outfile = $cgoutfile"
	# Get the start and end lines to sum
	# These are the miss/hit results for each line, generated by cachegrind
	startline=$(sed -n /^fn=matVecMult$/= $cgoutfile)
	startline=$(($startline+1))
	endline=$(sed -n /^fn=randInitialize$/= $cgoutfile)
	endline=$(($endline-1))

	# Init the sums array
	sums=[10]
	for (( i = 0; i<=10; i++ )) do
		sums[$i]=0
	done

	echo "Adding lines $startline to $endline"
	for (( line = startline; line<=endline; line++ )) do
		#echo "Line: $line"
		#sed -n  $line,8p $cgoutfile
		string=$(sed -n  $line,8p $cgoutfile)
		IFS=' ' read -a array <<< "$string"

		for (( i = 0; i<=10; i++ )) do
			sums[$i]=`expr ${sums[$i]} + ${array[$i]}`
			#echo "${array[$i]}"
		done
	done 

	d1readMR=$(bc <<< "scale = 10; 100*${sums[5]}/${sums[4]} ")
	d1writeMR=$(bc <<< "scale = 10; 100*${sums[8]}/${sums[7]} ")

	echo "Printing to file: "
	echo "$bytes ${sums[1]} ${sums[2]} ${sums[3]} ${sums[4]} ${sums[5]} ${sums[6]} ${sums[7]} ${sums[8]} ${sums[9]} $d1readMR $d1writeMR"
	echo "$bytes ${sums[1]} ${sums[2]} ${sums[3]} ${sums[4]} ${sums[5]} ${sums[6]} ${sums[7]} ${sums[8]} ${sums[9]} $d1readMR $d1writeMR" >> $datfile
done
#echo "Sums of all lines:"
#for (( i = 0; i<=10; i++ )) do
#	echo "${sums[$i]}"
#done


